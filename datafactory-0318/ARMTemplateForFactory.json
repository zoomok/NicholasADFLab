{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory-0318"
		},
		"LS_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS'"
		},
		"LS_ASQL0318_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL0318'"
		},
		"LS_ASQL0319_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL0319'"
		},
		"LS_SYNPSE0318_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SYNPSE0318'"
		},
		"LS_ABLB_KV_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sec-blobstorage0318-connectionstring"
		},
		"LS_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalake0318.dfs.core.windows.net"
		},
		"LS_KV_BlobStorage0318_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://KV-ADF-Nicholas.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/001_PL_COPY_ADLS_ASQL_Multi_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load multiple csv files in data lake with different file names and delimiters\n\nLink : \nhttps://www.mssqltips.com/sqlservertip/6281/how-to-load-multiple-files-in-parallel-in-azure-data-factory--part-1/\nhttps://www.mssqltips.com/sqlservertip/6282/azure-data-factory-multiple-file-load-example--part-2/",
				"activities": [
					{
						"name": "Lookup_Get_Metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n     b.[ObjectName]\n    ,FolderName = b.[ObjectValue]\n    ,SQLTable   = s.[ObjectValue]\n    ,Delimiter  = d.[ObjectValue]\nFROM [dbo].[Metadata_ADF] b\nJOIN [dbo].[Metadata_ADF] s ON b.[ObjectName] = s.[ObjectName]\nJOIN [dbo].[Metadata_ADF] d ON b.[ObjectName] = d.[ObjectName]\nWHERE   b.[SourceType] = 'BlobContainer'\n    AND s.[SourceType] = 'SQLTable'\n    AND d.[SourceType] = 'Delimiter';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL0318_Movies_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "_notSet"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop over Metadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Get_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Get_Metadata').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Blob to SQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": "*.csv"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "truncate table dbo.@{item().SQLTable}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_CSV_Movies_Dynamic",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": "@{item().FolderName}",
												"DelimiterSymbol": "@{item().Delimiter}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ASQL0318_Movies_Dynamic",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@{item().SQLTable}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL0318_Movies_Dynamic')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_CSV_Movies_Dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/002_PL_COPY_ASQL_Multi_Tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy multiple tables using Filter\n\nLink ; https://www.mssqltips.com/sqlservertip/6187/azure-data-factory-foreach-activity-example/",
				"activities": [
					{
						"name": "Lookup_Get_TableList",
						"description": "Get TableList from SQL0318.dbo.VW_TableList_P",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL0318_VW_TableList_P",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter_Table_Startwith_P",
						"description": "Filter tables which name starts with 'P'",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup_Get_TableList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Get_TableList').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(string(item().tbl), 'P')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "sp_Usp_PurgeTargetTables",
						"description": "Purge Filtered Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Filter_Table_Startwith_P",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Usp_PurgeTargetTables]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL0319",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach_CopyData",
						"description": "Copy filtered table data from 0318 to 0319",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "sp_Usp_PurgeTargetTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_Table_Startwith_P').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data from 0318 to 0319",
									"description": "Copy Table data using parameters",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASQL0318_Table_Param",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().sch",
													"type": "Expression"
												},
												"TableName": "@item().tbl"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ASQL0319_Table_Param",
											"type": "DatasetReference",
											"parameters": {
												"schema": "@item().sch",
												"table": "@item().tbl"
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL0318_VW_TableList_P')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL0319')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL0318_Table_Param')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL0319_Table_Param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/003_PL_DATA_ASQL_Incr_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Full or Incremental data load from 0318 (Source) to 0319 (Staging)\n\nLink : https://www.udemy.com/course/implementing-real-world-use-cases-in-azure-data-factory-v2/learn/lecture/19940682#overview",
				"activities": [
					{
						"name": "Load Enabled from 0319",
						"description": "Read Enabled load table from CFG table in 0319 (Staging DB)",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from cfg where enabled = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL0319_CFG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter CRM",
						"description": "Filter 'CRM' source from CFG table",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Load Enabled from 0319",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Load Enabled from 0319').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().Source,'CRM')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Data Load",
						"description": "If 'Full Load'",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter CRM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter CRM').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Full or Incremental",
									"description": "True (1) -> Incremental Load\nFalse (0) -> Full Load",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().Incremental_Full_Load,1))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy SRC0318 to STG0319 Full Load",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select * from @{item().Table_Name}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"preCopyScript": {
															"value": "truncate table @{item().Table_Name}",
															"type": "Expression"
														},
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_ASQL0318_Table",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ASQL0319_Table_Param",
														"type": "DatasetReference",
														"parameters": {
															"schema": "dbo",
															"table": {
																"value": "@{item().Table_Name}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Get Max Update date from Actual Table",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Copy SRC0318 to STG0319 Full Load",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select max(last_updated_date) as maxD\nfrom @{item().Table_Name}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL0319_Table_Param",
														"type": "DatasetReference",
														"parameters": {
															"schema": "dbo",
															"table": {
																"value": "@{item().Table_Name}",
																"type": "Expression"
															}
														}
													}
												}
											},
											{
												"name": "Update CFG table",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Get Max Update date from Actual Table",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "update CFG set Max_LastUpdatedDate = '@{activity('Get Max Update date from Actual Table').output.firstRow.maxD}' where table_name like '@{item().Table_Name}'\nselect '1'",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL0319_CFG",
														"type": "DatasetReference",
														"parameters": {}
													},
													"firstRowOnly": true
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Incr Load - Get Max LastUpdated CFG",
												"description": "Get Max_LastUpdatedDate from CFG table",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select max_lastupdateddate from cfg where table_name = '@{item().Table_name}'",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL0319_CFG",
														"type": "DatasetReference",
														"parameters": {}
													},
													"firstRowOnly": true
												}
											},
											{
												"name": "Copy SRC-0318 to STG-0319",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Incr Load - Get Max LastUpdated CFG",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select  *\nfrom @{item().Table_Name}\nwhere convert(varchar(max), last_updated_date, 120) >\nconvert(varchar(max), substring(replace('@{activity('Incr Load - Get Max LastUpdated CFG').output.firstrow.max_lastupdateddate}', 'T', ' '), 0, 20), 120)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_ASQL0318_Table",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ASQL0319_Table_Param",
														"type": "DatasetReference",
														"parameters": {
															"schema": "dbo",
															"table": "@{item().Table_Name}"
														}
													}
												]
											},
											{
												"name": "Get Max Update date from Actual Tables",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Copy SRC-0318 to STG-0319",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select max(Last_Updated_Date) as maxD from @{item().Table_Name}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL0319_Table_Param",
														"type": "DatasetReference",
														"parameters": {
															"schema": "dbo",
															"table": {
																"value": "@{item().Table_Name}",
																"type": "Expression"
															}
														}
													},
													"firstRowOnly": true
												}
											},
											{
												"name": "Update Max_LastUpdate in CFG",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Get Max Update date from Actual Tables",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "update cfg set max_lastupdateddate = '@{activity('Get Max Update date from Actual Tables').output.firstrow.maxD}' where table_name = '@item().Table_Name'\nselect '1'",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DS_ASQL0319_Table",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL0319_CFG')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL0318_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL0319_Table_Param')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL0319_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/004_PL_COPY_ADLS_Synapse_DW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load FactTransactionHistory in datalake to Azure DW using Azure Data Factory\n\nLink : https://www.udemy.com/course/azure-sql-data-warehouse-synapse-analytics-service/learn/lecture/18542416#overview",
				"activities": [
					{
						"name": "Copy_FTH_TransactionFile_To_Synapse",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "demo/FTH/FactTransactionHistory.txt"
							},
							{
								"name": "Destination",
								"value": "prod.FactTransactionHistoryADF"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table prod.FactTransactionHistoryADF",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "TransactionID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "ProductKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_FTH_TransactionHistory",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SYNPSE_FactTransactionHistoryADF",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FTH_TransactionHistory')]",
				"[concat(variables('factoryId'), '/datasets/DS_SYNPSE_FactTransactionHistoryADF')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_CSV_ChicagoCrime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ChicagoCrime.csv",
						"fileSystem": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_CSV_Movies_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"DelimiterSymbol": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": "csv"
					},
					"columnDelimiter": {
						"value": "@dataset().DelimiterSymbol",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_FTH_TransactionHistory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "FactTransactionHistory.txt",
						"folderPath": "FTH",
						"fileSystem": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL0318_Movies_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL0318",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL0318')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL0318_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset for general purpose and 0318 tables",
				"linkedServiceName": {
					"referenceName": "LS_ASQL0318",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL0318')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL0318_Table_Param')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset using SchemaName.TableName",
				"linkedServiceName": {
					"referenceName": "LS_ASQL0318",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL0318')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL0318_VW_TableList_P')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL0318",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sch",
						"type": "nvarchar"
					},
					{
						"name": "tbl",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VW_TableList_P"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL0318')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL0319_CFG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL0319",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Table_Name",
						"type": "varchar"
					},
					{
						"name": "Source",
						"type": "varchar"
					},
					{
						"name": "Max_LastUpdatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Enabled",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Incremental_Full_Load",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cfg"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL0319')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL0319_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset for general purpose and 0319 tables",
				"linkedServiceName": {
					"referenceName": "LS_ASQL0319",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL0319')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL0319_Table_Param')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL0319",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL0319')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SYNPSE_FactTransactionHistoryADF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SYNPSE0318",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TransactionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActualCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "FactTransactionHistoryADF"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SYNPSE0318')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_KV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KV_BlobStorage0318",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_ABLB_KV_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KV_BlobStorage0318')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL0318')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL0318_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL0319')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL0319_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KV_BlobStorage0318')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KV_BlobStorage0318_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SYNPSE0318')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('LS_SYNPSE0318_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}